pygame import *

#шрифты и надписи
font.init()
font1 = font.Font(None, 35)
lose1 = font1.render('PLAYER 1 LOSE!', True, (100, 0, 0))
font2 = font.Font(None, 35)
lose2 = font2.render('PLAYER 2 LOSE!', True, (100, 0, 0))

#нам нужны такие картинки:
img_racket = "racket.jpg" # ракетка
img_ball = "ball.png" # мяч

#класс-родитель для других спрайтов
class GameSprite(sprite.Sprite):
#конструктор класса
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
        #Вызываем конструктор класса (Sprite):
        sprite.Sprite.__init__(self)
 
        #каждый спрайт должен хранить свойство image - изображение
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
 
        #каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
#метод, отрисовывающий героя на окне
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))

#класс главного игрока
class Player(GameSprite):
    #метод для управления спрайтом стрелками клавиатуры
    def update_l(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
           self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < win_height - 130:
           self.rect.y += self.speed
    def update_r(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < win_height - 130:
            self.rect.y += self.speed
 
#Создаём окошко
win_width = 700
win_height = 500
display.set_caption("Ping Pong")
window = display.set_mode((win_width, win_height))
 
#создаём спрайты
racket1 = Player(img_racket, 30, 250, 15, 125, 10)
racket2 = Player(img_racket, 660, 250, 15, 125, 10)
ball = Player(img_ball, 350, 250, 50, 50, 10)

#переменная "игра закончилась": как только там True, в основном цикле перестают работать спрайты
finish = False
#Основной цикл игры:
run = True #флаг сбрасывается кнопкой закрытия окна
speed_x = 10
speed_y = 10
while run:
    #событие нажатия на кнопку “Закрыть”
    for e in event.get():
        if e.type == QUIT:
            run = False
    
    if finish != True:
        ball.rect.x += speed_x
        ball.rect.y += speed_y
        
    if sprite.collide_rect(racket1, ball) or sprite.collide_rect(racket2, ball):
        speed_x *= -1
        
    if ball.rect.y > win_height - 50 or ball.rect.y < 0:
        speed_y *= -1
            
    if ball.rect.x < 0:
        finish = True
        window.blit(lose1, (200, 200))
    if ball.rect.x > win_width - 50:
        finish = True
        window.blit(lose2, (200, 200))

    if not finish:

        #производим движения спрайтов
        racket1.update_l()
        racket2.update_r()

        #обновляем их в новом местоположении при каждой итерации цикла
        racket1.reset()
        racket2.reset()
        ball.reset()
        
    display.update()
    #цикл срабатывает каждую 0.05 секунд
    time.delay(50)
